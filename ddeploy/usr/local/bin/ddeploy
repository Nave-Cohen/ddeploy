#!/usr/bin/env bash

export base="/etc/ddeploy"
export WORKDIR="$PWD"
export MAIN_DIR="$base"


if [ "$#" -lt 1 ]; then
    echo "[ERROR] No command set"
    exit 5
fi

if [[ $1 == "init" ]]; then
    shift
    "$base/commands/init/index.sh" "$@"
    exit $?
fi

folder=$("$base/helpers/isWorkdir.sh")
if [ -z "$folder" ]; then
    echo "$(basename "$WORKDIR") is not a runner environment"
    exit 6
else
    export WORKDIR="$folder"
fi


export $(grep -v '^#' "$WORKDIR/.ddeploy.env" | xargs)
required_variables=("GIT" "BRANCH" "DOMAIN" "MAIL" "BACKEND_IP" "BACKEND_PORT" "MYSQL_PASSWORD" "MYSQL_DATABASE" "MYSQL_USER")
for variable in "${required_variables[@]}"; do
    if [[ -z "${!variable}" ]]; then
        echo "Error: $variable must be defined in .ddeploy.env file"
        exit 1
    fi
done

sub_command="$base/commands/$1/index.sh"
if [ -f "$sub_command" ]; then
    shift
    "$sub_command" "$@"
    exit 0
elif command docker compose "$@" --help >/dev/null 2>&1; then
    # Check if the provided command is a valid Docker Compose command
    # Run the Docker Compose command
    docker compose "$@"
    exit 0
else
    "$base/commands/help/index.sh"
    echo "ddeploy: $@ is not ddeploy command."
    echo "See 'ddeploy help'"
    exit 6
fi
