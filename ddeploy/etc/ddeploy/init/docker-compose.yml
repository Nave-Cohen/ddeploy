services:

  certbot:
    container_name: certbot-${DOMAIN}
    image: certbot/certbot:latest
    env_file: ./.ddeploy.env
    entrypoint: sh -c 'while :; do certbot certonly --webroot -w /var/www/letsencrypt --preferred-challenges http-01 --email ${MAIL} --agree-tos -d ${DOMAIN} --non-interactive --keep-until-expiring; sleep 12h; done'
    volumes:
      - html:/var/www/letsencrypt
      - certs:/etc/letsencrypt
    networks:
      - ddeployer-net

  database:
    container_name: mysql-${DOMAIN}
    image: mysql:latest
    restart: unless-stopped
    env_file: ./.ddeploy.env
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD
    volumes:
      - db:/var/lib/mysql
      - ./entrypoint/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    networks:
      - db-network

  app:
    container_name: app-${DOMAIN}
    depends_on:
      database:
        condition: service_healthy
    ports:
      - ${BACKEND_PORT}:3000
    build:
      context: ./app
      dockerfile: Dockerfile
      args:
        - GIT=${GIT}
    restart: unless-stopped
    env_file:
      - ./.ddeploy.env
    environment:
      - MYSQL_HOST=database
    networks:
      - ddeployer-net
      - db-network

volumes:
  db:
  certs:
    external: true
  html:
    external: true
networks:
  db-network:
  ddeployer-net:
    external: true
