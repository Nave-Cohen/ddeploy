#!/usr/bin/env bash

set -e
base="/etc/ddeploy"
# Function to generate a unique password for the host machine
generate_unique_password() {
    # Function to generate a random string
    generate_random_string() {
        cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w "${1:-32}" | head -n 1
    }

    # Get the hostname of the machine
    hostname=$(hostname)

    # Get the current timestamp (number of seconds since the epoch)
    timestamp=$(date +%s)

    # Generate a random string
    random_string=$(generate_random_string 12)

    # Combine the components to create the unique password
    hash="${hostname}-${timestamp}-${random_string}"

    echo "$hash" >/etc/ddeploy/.hash
}

restore_conf() {
    conf_folder="/var/tmp/ddeploy/conf"
    if [ ! -z "$(find "$conf_folder" -mindepth 1 -maxdepth 1 -print -quit)" ]; then
        mv $conf_folder/* $base/configs
        rm -r $conf_folder
    fi
}

update_conf() {
    json_data="$base/configs/deploys.json"
    while IFS= read -r line; do
        folder=$(echo "$line" | jq -r '.folder')
        if [[ -d $folder ]]; then
            cp -r $base/init/app $folder
            cp -r $base/init/entrypoint $folder
            cp -r $base/init/docker-compose.yml $folder
        fi
    done < <(jq -c '.[]' "$json_data")
}

create_cronjobs() {
    # Define the cron job commands
    cronjob="* * * * * $base/maintence/rebuilder.sh"
    cronjob2="0 0 * * * $base/maintence/cleaner.sh"

    # Add the cron job commands to the crontab
    (
        crontab -l
        echo "$cronjob"
        echo "$cronjob2"
    ) | crontab -
}

if [ "$1" = "configure" ]; then
    echo "Configure new cronjobs ..."
    create_cronjobs
    echo "Restore configuration files ..."
    restore_conf
    echo "Update existing ddeploy enviorment with new configuration"
    update_conf
    if [ ! -d /var/log/ddeploy ]; then
        mkdir /var/log/ddeploy
    fi
    if [ ! -f /etc/ddeploy/.hash ]; then
        generate_unique_password
    fi

fi
